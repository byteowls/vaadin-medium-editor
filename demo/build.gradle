buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url = "http://maven.vaadin.com/vaadin-addons"}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'war'

eclipse {
  project {
    name = 'vaadin-medium-editor-demo'
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url = "http://maven.vaadin.com/vaadin-addons"}
}

dependencies {
  compile project(":addon")
  
  compile "com.thedeanda:lorem:1.2"
  compile ("com.vaadin:vaadin-server:${vaadinVersion}")
  compile ("com.vaadin:vaadin-client-compiled:${vaadinVersion}")
  compile ("com.vaadin:vaadin-themes:${vaadinVersion}")
  
  compile ("com.vaadin:vaadin-spring-boot:${vaadinSpringVersion}")
  compile ("com.vaadin:vaadin-spring:${vaadinSpringVersion}")
  compile ("org.vaadin.spring.addons:vaadin-spring-addon-eventbus:${vaadin4SpringVersion}")
  compile ("org.vaadin.spring.extensions:vaadin-spring-ext-boot:${vaadin4SpringVersion}")
  compile ("de.java2html:java2html:5.0")
  providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  runtime("javax.servlet:jsp-api:2.0"){
    transitive = false;
  }
}

project.ext.vaadinThemeDir = "VAADIN/themes/${vaadinTheme}"
project.ext.vaadinCssDir = "${project.buildDir}/tmp/styles";

task compileVaadinScss(type: JavaExec) {
    def styleDir = new File("${vaadinCssDir}")
    if (!styleDir.exists()) {
        styleDir.mkdirs()
    }
    classpath = sourceSets.main.compileClasspath
    main = 'com.vaadin.sass.SassCompiler'
    args = [
        "src/main/webapp/${project.vaadinThemeDir}/styles.scss",
        "${vaadinCssDir}/styles.css",
        "-minify:true",
        "-compress:true"
    ]
    
}

war {
    dependsOn compileVaadinScss
    baseName = project.ext.artifactId
    
    from ("${vaadinCssDir}") {
        into vaadinThemeDir
    }
    
    excludes = [
        "${vaadinThemeDir}/*.scss",
        "${vaadinThemeDir}/*.cache"
    ]

    // Add sources
    webInf {
      into('classes'){
        from sourceSets.main.allJava
       }
    }
}
